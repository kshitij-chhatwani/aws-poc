plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:2.2.7'
    compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.634'
    compile 'org.apache.logging.log4j:log4j:2.11.2'

}

test {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava         // include the compiled source code
    from processResources    // include any resources
    into('lib') {            // in a lib folder at the root of the archive, include all runtime dependencies
        from configurations.runtimeClasspath
    }
}
assemble.dependsOn(buildZip)